%?indent=spaces,4
%person
    name:bob
    text:asdfasdfasd
    %comment
        text:hi  
    %^
        text:there
    %^
        text:dude

as opposed to

<person name="bob", text="asdf">
    <comment text="hi"/>
    <comment text="there"/>
    <comment text="dude"/>
</person>


where a section is 
    * started by %<name> and either 
    * ends with a %^ which indicates the start of a new section with the same name
    * or ends a decrease in indentation and no %^ construct

A section can also have type by specifying %<name>:<type> where the default type is object. List should also be a valid type

each line only contains one thing :
 * settings lines
    * %?<setting>=<param1>,<param2>,..,<paramN>
 * start of section %<name>:<type>
 * name:value attribute pair
 * name:type:value attribute triplet
 * attribute default %(<attribute pair/triplet>)
 * restart construct %^
 
multiline content is to be expressed in a single line with '\n' characters instead of actual newlines

attributes can have a type associated with it by having this syntax :
 * name:type:value
 
if there is no type, then it defaults to string. Valid types should consist of
 * string
 * int, integer
 * real, float
 * bool, boolean
 * date
 * list (i.e. comma seperated values where whitespace is not significant)

it should be possible to define different types for saving and loading one or more particular models.

Attributes should be able to have defaults

So
    %groups:list
        %group
        
            %(thing:int:23)
            
        %^
            other:int:43
        %^
            other:int:54
        %^
            
            %(thing:int:21)
       
        %^
            other:int71

rules:
    * must not exist with attributes or other sections.
    * Will effect all following objects untill it is reset
    * %(<name>::) can be used to reset the value to not existing
    * doesn't effect indentation
    * defaults is overriden 

Whitespace should be significant. Every construct except attributes should start a new level of indentation.
 * attributes should leave the indentation alone
 * %^ should be preceded with decrease of indentation
 * new section should be preced with decrease of indentation
 * an error is raised if this is not followed
 * indentation should be configurable and default to four spaces
 
Settings constructs are lines that start with %?. These may not be indented and must come before anything else.
   * should be mapped to functions. For example the indent above could become
   def settings__indent(type, number):
      if type=='spaces':
          if not number:
              number = 4
          else:
              if number.isdigit():
                  number = int(number)
              else:
                  raise ConfigError("Indent setting needs a string or string,number")
          self.indent = ''.join(' ' for _ in range(int(number)))
      elif type in ('tab', 'tabs'):
          self.indent = '\t'
      else:
          raise ConfigError("Indent setting can be set with 'tab' or 'spaces,<number>?'")
              
